" Space as leader key
nnoremap <Space> <Nop>
let mapleader=" "

" Settings
set visualbell
set noerrorbells
set incsearch
set ignorecase
set smartcase
set hlsearch
set notimeout
set keep-english-in-normal

set clipboard-=ideaput
set clipboard+=unnamedplus

" IdeaVim settings
set ideajoin
set ideamarks

" Plugins
set surround
set matchit
set NERDTree
set sneak
set easymotion
set commentary
set highlightedyank
set argtextobj
set which-key

" Other
nnoremap <esc> :<C-u>noh<CR><esc>
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [d <Action>(GotoPreviousError)
nmap ]d <Action>(GotoNextError)

" Window navigation keymaps
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <C-q> :<C-u>q<CR>

" Tab Navigation keymaps
nmap H <Action>(PreviousTab)
nmap L <Action>(NextTab)
nmap <Leader>, <Action>(Switcher)

" Code navigation keymaps
nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)
nmap gd <Action>(GotoDeclaration)
nmap gu <Action>(FindUsages)
nmap gl <Action>(ShowErrorDescription)
nmap gI <Action>(GotoImplementation)
nmap K <Action>(QuickJavaDoc)
nmap gK <Action>(ParameterInfo)
nmap <Leader>s <Action>(FileStructurePopup)

" File Navigation
nmap <Leader><Space> <Action>(SearchEverywhere)
nmap <Leader>fc <Action>(GotoClass)
nmap <Leader>ff <Action>(GotoFile)
nmap <Leader>fg <Action>(FindInPath)

" Other windows access
nnoremap <Leader>e :<C-u>NERDTreeFocus<CR>
nmap <Leader>wp <Action>(ActivateProblemsViewToolWindow)
nmap <Leader>wr <Action>(ActivateRunToolWindow)
nmap <Leader>wg <Action>(ActivateVersionControlToolWindow)
" nmap <Leader>wc <Action>(ActivateCommitToolWindow)
" nmap <Leader>wd <Action>(ActivateDatabaseToolWindow)
nmap <Leader>wn <Action>(ActivateNotificationsToolWindow)
nmap <Leader>wnc <Action>(ClearAllNotifications)
nmap <Leader>wt <Action>(ActivateTerminalToolWindow)
nmap <Leader>wc <Action>(HideAllWindows)
nmap <C-/> <Action>(ActivateTerminalToolWindow)

" Perform actions in code
nmap <Leader>ca <Action>(ShowIntentionActions)
nmap <Leader>cr <Action>(RenameElement)
"nmap <Leader>cf <Action>(ReformatCode)
nmap <Leader>cf <Action>(com.github.ragurney.spotless.actions.ReformatAllFilesAction)
nmap <Leader>cg <Action>(Generate)
nmap <Leader>cl <Action>(ShowErrorDescription)
nmap <Leader>co <Action>(OptimizeImports)
nmap <Leader>cu <Action>(GotoSuperMethod)
vmap <Leader>cv <Action>(IntroduceVariable)
vmap <Leader>cm <Action>(ExtractMethod)

" Save current file with C-s
nmap <C-s> :w<CR>

" Debug keymaps
nmap <Leader>db <Action>(ToggleLineBreakpoint)
nmap <Leader>de <Action>(EditBreakpoint)

" Tests keymaps
nmap <Leader>tr <Action>(RunClass)
nmap <Leader>td <Action>(DebugClass)
nmap <Leader>tt <Action>(Rerun)

" Keymaps to move lines of code up and down
ap <A-j> :m .+1<CR>==
ap <A-k> :m .-2<CR>==
ap <A-j> :m '>+1<CR>gv=gv
ap <A-k> :m '<-2<CR>gv=gv

" Stay in visual mode after (un)indenting
vmap < <gv^
vmap > >gv^

" Reload .ideavimrc without restarting the IDE
nmap <Leader>ir <Action>(IdeaVim.ReloadVimRc.reload)

" NERDTree keymaps : open/close a node with l/h
let g:NERDTreeMapActivateNode="l"
let g:NERDTreeMapCloseDir="h"

" Plugins keymaps
map \ <Plug>(easymotion-prefix)
let g:WhichKey_ProcessUnknownMappings = "false"
let g:WhichKey_SortOrder = "by_key_prefix_first"
